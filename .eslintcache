[{"C:\\Users\\gblythe\\workbox\\workbox\\src\\App.js":"1","C:\\Users\\gblythe\\workbox\\workbox\\src\\index.js":"2","C:\\Users\\gblythe\\workbox\\workbox\\src\\api\\fetchWeather.js":"3"},{"size":2383,"mtime":1607029519398,"results":"4","hashOfConfig":"5"},{"size":149,"mtime":1607022535085,"results":"6","hashOfConfig":"5"},{"size":355,"mtime":1607028181854,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"1si0tmm",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gblythe\\workbox\\workbox\\src\\App.js",["15"],"import {AppBar, Button, Card, CardContent, CardHeader, Container, Grid, makeStyles, TextField, Toolbar, Typography} from '@material-ui/core';\r\nimport React, {useState} from 'react';\r\nimport {fetchWeather} from './api/fetchWeather';\r\nimport './App.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  card: {\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const [query, setQuery] = useState('');\r\n  const [weather, setWeather] = useState({});\r\n \r\n  const search = async () => {\r\n    const data = await fetchWeather(query);\r\n    console.log(data)\r\n    setWeather(data);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position={'static'}>\r\n        <Toolbar>\r\n          <Typography>PWA Weather App</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main>\r\n        <Container maxWidth={'md'}>\r\n          <Grid container={true} className={classes.search} alignContent={'center'}>\r\n            <Grid item={true} md={10}>\r\n              <TextField \r\n                id={'city'}\r\n                label={'Location(City)'}\r\n                variant={'outlined'} \r\n                fullWidth={true}\r\n                value={query}\r\n                onChange={(e) => setQuery(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item={true} md={2}>\r\n              <Button className={classes.button} variant={'contained'} color={'primary'} onClick={search}>Submit</Button> \r\n            </Grid>\r\n          </Grid>\r\n          {weather.main && (\r\n            <Grid container={true} justify={'center'}>\r\n              <Card className={classes.card}>\r\n                <CardHeader title={weather.name}/>\r\n                <CardContent >\r\n                  <Typography variant={'caption'}>Temp</Typography>\r\n                  <Typography variant={'h4'}>{Math.round(weather.main.temp)}<sup>&deg;F</sup></Typography>\r\n                  <img src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description}/>\r\n                  <Typography variant={'subtitle2'}>{weather.weather[0].description.toUpperCase()}</Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          )}\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\gblythe\\workbox\\workbox\\src\\index.js",[],"C:\\Users\\gblythe\\workbox\\workbox\\src\\api\\fetchWeather.js",[],{"ruleId":"16","severity":1,"message":"17","line":18,"column":1,"nodeType":"18","endLine":71,"endColumn":3},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration"]